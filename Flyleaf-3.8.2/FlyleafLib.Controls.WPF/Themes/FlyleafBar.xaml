<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:flwpf="clr-namespace:FlyleafLib.Controls.WPF">

    <Style x:Key="FlyleafBarDefault" TargetType="{x:Type flwpf:FlyleafBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ControlTemplate.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <!--<ResourceDictionary Source="pack://application:,,,/FlyleafLib.Controls.WPF;component/Resources/MaterialDesignColors.xaml"/>-->
                                <ResourceDictionary Source="pack://application:,,,/FlyleafLib.Controls.WPF;component/Resources/MaterialDesign.xaml"/>
                                <ResourceDictionary Source="pack://application:,,,/FlyleafLib.Controls.WPF;component/Resources/PopUpMenu.xaml"/>
                                <ResourceDictionary Source="pack://application:,,,/FlyleafLib.Controls.WPF;component/Resources/Slider.xaml"/>
                            </ResourceDictionary.MergedDictionaries>

                            <Storyboard x:Key="fadeIn" Timeline.DesiredFrameRate="10">
                                <DoubleAnimation BeginTime="0:0:0" Storyboard.TargetProperty="Opacity"  To="1" Duration="0:0:0.5" AutoReverse="False"/>
                            </Storyboard>

                            <Storyboard x:Key="fadeOut" Timeline.DesiredFrameRate="10">
                                <DoubleAnimation BeginTime="0:0:0" Storyboard.TargetProperty="Opacity"  To="0" Duration="0:0:2.0" AutoReverse="False"/>
                            </Storyboard>
                        </ResourceDictionary>
                    </ControlTemplate.Resources>
                    <materialDesign:Card DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type flwpf:FlyleafBar}}}" TextElement.FontSize="14" TextElement.FontWeight="Medium" TextElement.Foreground="White" FontFamily="{materialDesign:MaterialDesignFont}" VerticalAlignment="Bottom" Focusable="False">
                        <materialDesign:Card.Background>
                            <SolidColorBrush Color="{Binding Player.Config.Video.BackgroundColor}" Opacity="0.15"/>
                        </materialDesign:Card.Background>
                        <materialDesign:Card.Style>
                            <Style TargetType="{x:Type materialDesign:Card}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Idle">
                                        <DataTrigger.EnterActions>
                                            <RemoveStoryboard BeginStoryboardName="fadeInN" />
                                            <BeginStoryboard x:Name="fadeOutN" Storyboard="{StaticResource fadeOut}" />
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Active">
                                        <DataTrigger.EnterActions>
                                            <RemoveStoryboard BeginStoryboardName="fadeInN" />
                                            <BeginStoryboard x:Name="fadeOutN2" Storyboard="{StaticResource fadeOut}" />
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Player.Activity.Mode, FallbackValue=FullActive, TargetNullValue=FullActive}" Value="FullActive">
                                        <DataTrigger.EnterActions>
                                            <RemoveStoryboard BeginStoryboardName="fadeOutN" />
                                            <RemoveStoryboard BeginStoryboardName="fadeOutN2" />
                                            <BeginStoryboard x:Name="fadeInN" Storyboard="{StaticResource fadeIn}" />
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </materialDesign:Card.Style>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="1" Margin="0,0,0,0">
                                <Grid.Resources>
                                    <ResourceDictionary>
                                        <Style x:Key="IconButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
                                            <Setter Property="Width" Value="32"/>
                                            <Setter Property="Height" Value="32"/>
                                            <Setter Property="Focusable" Value="False"/>
                                        </Style>
                                    </ResourceDictionary>
                                </Grid.Resources>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>

                                <!--Play / Pause Button-->
                                <Button Grid.Column="0" Command="{Binding Player.Commands.TogglePlayPause}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                                            <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Play}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Player.Status}" Value="Playing">
                                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Pause}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <!--Subtitles Button (Currently not used)-->
                                <!--<Button x:Name="PART_ContextMenuOwner_Subtitles" Command="{Binding OpenContextMenu}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Grid.Column="1" Foreground="{DynamicResource MaterialDesign.Brush.Secondary}" Content="{materialDesign:PackIcon Kind=CcOutline}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                                            <Setter Property="ContextMenu">
                                                <Setter.Value>
                                                    <ContextMenu ItemsSource="{StaticResource MenuSubtitlesStreams}" Style="{StaticResource FlyleafContextMenu}"/>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <EventTrigger RoutedEvent="Click">
                                                    <EventTrigger.Actions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                                                </BooleanAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger.Actions>
                                                </EventTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                -->

                               
                                
                                
                                <Button Grid.Column="1" Content="{materialDesign:PackIcon Kind=SkipPrevious}" Command="{Binding Player.Commands.Reopen}" CommandParameter="{Binding Player.Playlist.PrevItem}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Player.Playlist.PrevItem}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <Button Grid.Column="2" Content="{materialDesign:PackIcon Kind=SkipNext}" Command="{Binding Player.Commands.Reopen}" CommandParameter="{Binding Player.Playlist.NextItem}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Player.Playlist.NextItem}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                
                                <Grid Margin="5,0,5,0" Grid.Column="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>

                                    <!--Current Time | Slider | Duration-->
                                    <TextBlock Grid.Column="0" HorizontalAlignment="Left"   VerticalAlignment="Center" Text="{Binding Player.CurTime, Converter={StaticResource TicksToTime}}" d:Text="00:00:00"/>
                                    <Slider    Grid.Column="1" IsSelectionRangeEnabled="True" SelectionStart="{Binding RelativeSource={RelativeSource Self}, Path=Value, Mode=OneWay}" Style="{DynamicResource FlyleafSlider}" Focusable="False" Margin="10,0,10,0" VerticalAlignment="Center" Value="{Binding Player.CurTime, Mode=TwoWay, Converter={StaticResource TicksToSeconds}}" Maximum="{Binding Player.Duration, Converter={StaticResource TicksToSeconds}}">
                                        <Slider.SelectionEnd>
                                            <MultiBinding Converter="{StaticResource SumConverter}">
                                                <Binding Path="SelectionStart" RelativeSource="{RelativeSource Self}" Mode="OneWay"/>
                                                <Binding Path="Player.BufferedDuration" Converter="{StaticResource TicksToSeconds}" Mode="OneWay"/>
                                            </MultiBinding>
                                        </Slider.SelectionEnd>
                                    </Slider>
                                    <TextBlock Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Player.Duration, Converter={StaticResource TicksToTime}}" d:Text="00:00:00"/>
                                </Grid>
                                
                                <!--Volume Button (Mute/Unmute)-->
                                <Button Grid.Column="4" Foreground="{DynamicResource MaterialDesign.Brush.Secondary}" Command="{Binding Player.Commands.ToggleMute}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                                            <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VolumeHigh}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Player.Audio.Volume, Converter={StaticResource VolumeToLevels}}" Value="Mute">
                                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VolumeMute}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Player.Audio.Volume, Converter={StaticResource VolumeToLevels}}" Value="Low">
                                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VolumeLow}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Player.Audio.Volume, Converter={StaticResource VolumeToLevels}}" Value="Med">
                                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VolumeMedium}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Player.Audio.Mute}" Value="True">
                                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VolumeMute}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <!--Volume Slider (Decibel)-->
                                <Slider Grid.Column="5" Style="{DynamicResource FlyleafSlider}" Foreground="{DynamicResource MaterialDesign.Brush.Secondary}" Focusable="False" Margin="0,0,6,6" Width="100" VerticalAlignment="Bottom" Minimum="0" Maximum="{Binding Player.Config.Player.VolumeMax, Mode=OneWay}" d:Maximum="150" d:Value="75" Value="{Binding Player.Audio.Volume}"/>
                                <!--Quality + Movies Title-->
                                <StackPanel Grid.Column="6" Orientation="Horizontal" Margin="6,0,6,0" >
                                    <Button x:Name="PART_ContextMenuOwner_Video" Command="{Binding OpenContextMenu}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" ToolTip="选择视频质量">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                                                <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VideoBox}"/>
                                                <Setter Property="ContextMenu">
                                                    <Setter.Value>
                                                        <ContextMenu ItemsSource="{StaticResource MenuXtrCNQuality}" Style="{StaticResource FlyleafContextMenu}"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Player.XtrQualityName, Converter={StaticResource QualityToLevels}}" Value="Low" >
                                                        <Setter Property="Content" Value="{materialDesign:PackIcon Kind=QualityLow}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Player.XtrQualityName, Converter={StaticResource QualityToLevels}}" Value="Med">
                                                        <Setter Property="Content" Value="{materialDesign:PackIcon Kind=QualityMedium}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Player.XtrQualityName, Converter={StaticResource QualityToLevels}}" Value="High">
                                                        <Setter Property="Content" Value="{materialDesign:PackIcon Kind=QualityHigh}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Player.XtrQualityName, Converter={StaticResource QualityToLevels}}" Value="None">
                                                        <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VideoBox}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <materialDesign:PackIcon Kind="VideoInputAntenna" Height="20" Width="20" Foreground="{DynamicResource MaterialDesign.Brush.Secondary}" VerticalAlignment="Center" Visibility="{Binding Player.IsLive, Converter={StaticResource BooleanToVisibility}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"/>
                                    <!-- 20240215 Player.Playlist.Selected.Title         Player.XtrQualityName-->
                                    <TextBlock VerticalAlignment="Center" FontStyle="Normal" Margin="0,0,5,0" Text="{Binding Player.XtrQualityName}"/>
                                </StackPanel>

                                <Button Grid.Column="7"  Command="{Binding OpenContextMenu}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" ToolTip="选择画面宽高比">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                                            <Setter Property="Content" Value="{materialDesign:PackIcon Kind=AspectRatio}"/>
                                            <Setter x:Name="PART_ContextMenuOwner_AspectRatio" Property="ContextMenu"> <!--.SelectionChanged=""-->
                                                <Setter.Value>
                                                    <ContextMenu ItemsSource="{StaticResource MenuVedioAspectRatio}" Style="{StaticResource FlyleafContextMenu}"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                
                                <!--Open Settings Button-->
                                <!--<Button Grid.Column="7" Style="{StaticResource IconButton}" Content="{materialDesign:PackIcon Kind=SettingsOutline}" Command="{Binding OpenSettingsCmd}"/>-->
                                <ToggleButton Grid.Column="8" Style="{StaticResource MaterialDesignActionToggleButton}" Foreground="{DynamicResource MaterialDesign.Brush.Primary}" Background="Transparent" Focusable="False" ToolTip="媒体信息"
                                              Command="{Binding Player.Commands.ToggleShowDebugState}" CommandParameter="{Binding IsChecked,RelativeSource={RelativeSource Self}}"
                                              Content="{materialDesign:PackIcon Kind=InformationOutline, Size=24}" 
                                              materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=InformationOffOutline, Size=24}"/>    
                                <!--Toggle Fullscreen Button-->
                                <ToggleButton Grid.Column="9" Style="{StaticResource MaterialDesignActionToggleButton}" Foreground="{DynamicResource MaterialDesign.Brush.Primary}" Background="Transparent" Focusable="False"
                                                          IsChecked="{Binding Player.Host.IsFullScreen}" ToolTip="全屏播放" 
                                                          Content="{materialDesign:PackIcon Kind=Fullscreen, Size=28}" 
                                                          materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=FullscreenExit, Size=28}"/>
                            </Grid>
                        </Grid>
                    </materialDesign:Card>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>