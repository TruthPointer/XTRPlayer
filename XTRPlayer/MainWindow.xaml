<Window x:Class="XTRPlayer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:XTRPlayer"
        
        xmlns:fl="clr-namespace:FlyleafLib.Controls.WPF;assembly=FlyleafLib"
        xmlns:flwpf="clr-namespace:FlyleafLib.Controls.WPF;assembly=FlyleafLib.Controls.WPF"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        FontFamily="{materialDesign:MaterialDesignFont}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        
        Title="Flyleaf" WindowStyle="None" ResizeMode="NoResize" AllowsTransparency="True" Background="Transparent"
        
        MinWidth="400" MinHeight="225"
        Height="450" Width="800" WindowStartupLocation="CenterScreen" Loaded="Window_Loaded" Icon="/xtr.ico" Initialized="Window_Initialized">

    <Window.Resources>
        <d:ResourceDictionary Source="pack://application:,,,/FlyleafLib.Controls.WPF;component/Resources/MaterialDesignColors.xaml"/>
    </Window.Resources>

    <Border BorderThickness="0.6">
        <Border.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="pack://application:,,,/FlyleafLib.Controls.WPF;component/Resources/MaterialDesign.xaml"/>
                    <ResourceDictionary Source="pack://application:,,,/FlyleafLib.Controls.WPF;component/Resources/Converters.xaml"/>
                    <ResourceDictionary Source="Dictionary.xaml"/>
                </ResourceDictionary.MergedDictionaries>
                
                <Storyboard x:Key="fadeIn" Timeline.DesiredFrameRate="10">
                    <DoubleAnimation BeginTime="0:0:0" Storyboard.TargetProperty="Opacity"  To="1" Duration="0:0:0.5" AutoReverse="False"/>
                </Storyboard>

                <Storyboard x:Key="fadeOut" Timeline.DesiredFrameRate="10">
                    <DoubleAnimation BeginTime="0:0:0" Storyboard.TargetProperty="Opacity"  To="0" Duration="0:0:2.0" AutoReverse="False"/>
                </Storyboard>
            </ResourceDictionary>
        </Border.Resources>
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="#01000000"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Primary}"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding Player.Host.Surface.IsMouseOver}" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Primary}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Player.Host.IsFullScreen}" Value="True">
                        <Setter Property="BorderBrush" Value="#01000000"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Active">
                        <Setter Property="BorderBrush" Value="#01000000"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Idle">
                        <Setter Property="BorderBrush" Value="#01000000"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Player.Host.IsResizing}" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Primary}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Border BorderThickness="6 2 6 2" BorderBrush="#01000000">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" x:Name="HeaderGrid" Margin="-2 0 -2 0">
                    <Grid.Background>
                        <SolidColorBrush Color="{Binding Player.Config.Video.BackgroundColor}" Opacity="0.15"/>
                    </Grid.Background>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Idle">
                                    <DataTrigger.EnterActions>
                                        <RemoveStoryboard BeginStoryboardName="fadeInN" />
                                        <BeginStoryboard x:Name="fadeOutN" Storyboard="{StaticResource fadeOut}" />
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Active">
                                    <DataTrigger.EnterActions>
                                        <RemoveStoryboard BeginStoryboardName="fadeInN" />
                                        <BeginStoryboard x:Name="fadeOutN2" Storyboard="{StaticResource fadeOut}" />
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Player.Activity.Mode, FallbackValue=FullActive, TargetNullValue=FullActive}" Value="FullActive">
                                    <DataTrigger.EnterActions>
                                        <RemoveStoryboard BeginStoryboardName="fadeOutN" />
                                        <RemoveStoryboard BeginStoryboardName="fadeOutN2" />
                                        <BeginStoryboard x:Name="fadeInN" Storyboard="{StaticResource fadeIn}" />
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <Image Source="xtr.ico" Height="40" Margin="5 0 0 0" VerticalAlignment="Center" ToolTip="{Binding Tag.FlyleafLibVer}" Stretch="UniformToFill"/>

                    <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
                        <ToggleButton Width="36" Height="36" Style="{StaticResource MaterialDesignActionToggleButton}" Focusable="False" ToolTip="保持窗口在最顶层" Background="Transparent" Foreground="{DynamicResource MaterialDesign.Brush.Primary}"
                                  Content="{materialDesign:PackIcon Kind=PinOutline,Size=24}" materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=Pin}" IsChecked="{Binding DetachedTopMost}"/>
                        <Button Focusable="False" x:Name="BtnHelp" Width="36" Height="36" ToolTip="程序简要说明" Content="{materialDesign:PackIcon Kind=QuestionMark,Size=24}" Style="{StaticResource MaterialDesignIconButton}" Click="BtnHelp_Click"/>
                        <Button Focusable="False" x:Name="BtnMinimize" Width="36" Height="36" ToolTip="最小化窗口" Content="{materialDesign:PackIcon Kind=Minimize,Size=28}" VerticalContentAlignment="Bottom" Style="{StaticResource MaterialDesignIconButton}" Click="BtnMinimize_Click"/>
                        <ToggleButton Grid.Column="6" Width="36" Height="36" ToolTip="全屏播放" Style="{StaticResource MaterialDesignActionToggleButton}" Foreground="{DynamicResource MaterialDesign.Brush.Primary}" Background="Transparent" Focusable="False"
                                                          IsChecked="{Binding Player.Host.IsFullScreen}" 
                                                          Content="{materialDesign:PackIcon Kind=Fullscreen, Size=28}" 
                                                          materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=FullscreenExit, Size=28}"/>
                        <Button x:Name="BtnClose" Width="36" Height="36" Click="BtnClose_Click" ToolTip="关闭播放器" Content="{materialDesign:PackIcon Kind=Close,Size=30}" Style="{StaticResource MaterialDesignIconButton}" />
                    </StackPanel>
                   
                    <Image Source="/log-xtrzgpd.png" Grid.ColumnSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center" Height="32"/>

                </Grid>

                <Grid Grid.Row="1" x:Name="PART_ContextMenuOwner">
                    <!-- 右键弹出菜单 ContextMenu="{StaticResource PopUpMenu}" -->

                    <TextBlock VerticalAlignment="Top" HorizontalAlignment="Left" Padding="4" Margin="10 -40 0 0" d:Text="00:00:00.000 / 01:42:23.913" FontWeight="Bold" FontSize="14" Foreground="{DynamicResource MaterialDesign.Brush.Secondary}">
                        <TextBlock.Background>
                            <SolidColorBrush Color="{Binding Player.Config.Video.BackgroundColor}" Opacity="0.15"/>
                        </TextBlock.Background>
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Active" d:Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        <Run Text="{Binding Player.CurTime, Mode=OneWay, Converter={StaticResource TicksToTimeSpan}, StringFormat={}{0:hh\\:mm\\:ss\\.fff}}"/>
                        <Run Text="/"/>
                        <Run Text="{Binding Player.Duration, Mode=OneWay, Converter={StaticResource TicksToTimeSpan}, StringFormat={}{0:hh\\:mm\\:ss\\.fff}}"/>
                    </TextBlock>
                    
                    <TextBlock VerticalAlignment="Top" HorizontalAlignment="Right" Padding="4" Margin="0 10 10 0" FontWeight="Bold" d:Text="Volume 50%" FontSize="14" Text="{Binding Tag.Msg}" Foreground="{DynamicResource MaterialDesign.Brush.Secondary}">
                        <TextBlock.Background>
                            <SolidColorBrush Color="{Binding Player.Config.Video.BackgroundColor}" Opacity="0.15"/>
                        </TextBlock.Background>
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Idle" d:Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <Trigger Property="Text" Value="">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    
                    <TextBlock VerticalAlignment="Top" HorizontalAlignment="Right" Padding="4" Margin="0 -40 10 0" FontWeight="Bold" d:Text="Playing" FontSize="18" Text="{Binding Player.Status}" Foreground="{DynamicResource MaterialDesign.Brush.Secondary}">
                        <TextBlock.Background>
                            <SolidColorBrush Color="{Binding Player.Config.Video.BackgroundColor}" Opacity="0.15"/>
                        </TextBlock.Background>
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Player.Activity.Mode}" Value="Active" d:Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    
                    <!--Error Message-->
                    <Border Background="{Binding Player.Config.Video.BackgroundColor}" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="1" CornerRadius="6" BorderBrush="{DynamicResource MaterialDesign.Brush.Primary}" Visibility="{Binding Player.IsShowProgress, Converter={StaticResource BooleanToVisibility}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                        <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <!-- Text="{Binding Player.LastError, Converter={StaticResource ErrorMsgWithChineseTip}}" -->
                            <TextBox x:Name="TbPlayMsg" Margin="10" Background="Transparent" d:Text="Play Message" FontSize="16" IsReadOnly="True" BorderThickness="0" Text="{Binding Player.PlayInfo}" Foreground="{DynamicResource MaterialDesign.Brush.Primary}" TextWrapping="Wrap" HorizontalAlignment="Center" Block.TextAlignment="Center">
                                <!--   <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Player.PlayInfo}" Value="{x:Null}" d:Value="notnull">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style> -->
                            </TextBox>
                            <ProgressBar x:Name="PbWaiting" Height="10" IsIndeterminate="True"
                                            BorderThickness="0" Background="Transparent" Foreground="{DynamicResource MaterialDesign.Brush.Primary}" Padding="6,3,6,0"/>
                        </StackPanel>
                    </Border>
                    
                    <!--Pop Up Dialog (Settings/Set Values)-->
                    <materialDesign:DialogHost x:Name="PART_DialogSettings" OverlayBackground="{x:Null}"/>

                    <!--Debug Info-->
                    <fl:PlayerDebug VerticalAlignment="Center" HorizontalAlignment="Center" Player="{Binding Player}" BoxColor="#AA000000" HeaderColor="White" InfoColor="{DynamicResource MaterialDesign.Brush.Primary.Light}" ValueColor="{DynamicResource MaterialDesign.Brush.Secondary.Light}" 
                                    Visibility="{Binding ShowDebug, Converter={StaticResource BooleanToVisibility}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"/>

                    <!--Subtitles-->
                    <flwpf:OutlinedTextBlock Stroke="{Binding Player.Config.Video.BackgroundColor, Converter={StaticResource ColorToBrush}}" 
                         ClipToBounds="False"
                         Fill="{Binding UIConfig.SubsFontColor, Converter={StaticResource ColorToBrush}}"
                         StrokePosition="Outside"
                         StrokeThicknessInitial="{Binding UIConfig.SubsStrokeThickness}"
                         Margin="{Binding UIConfig.SubsMargin2}"
                         VerticalAlignment="Bottom"
                         HorizontalAlignment="Center"
                         TextAlignment="Center"
                         TextWrapping="Wrap"
                         FontFamily="{Binding UIConfig.SubsFontFamily}"
                         FontSizeInitial="{Binding UIConfig.SubsFontSize}"
                         FontWeight="{Binding UIConfig.SubsFontWeight}"
                         FontStyle="{Binding UIConfig.SubsFontStyle}"
                         Text="{Binding Player.Subtitles.SubsText}">
                    </flwpf:OutlinedTextBlock>

                    <!--Flyleaf Bar-->
                    <flwpf:FlyleafBar Player="{Binding Player}" Margin="-2 0 -2 0"/>
                </Grid>
            </Grid>
        </Border>
    </Border>
</Window>
